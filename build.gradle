plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.17'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "nebula.integtest" version "9.6.3"
    id "checkstyle"
//    id "org.sonarqube" version "4.4.1.3373"
//    id "jacoco"
}

group = 'autum.com'
version = '1.0.0-SNAPSHOT'

def jmockitVersion = '1.49'
def mapstructVersion = '1.5.3.Final'

java {
    sourceCompatibility = '11'
}

sourceSets {
    smokeTest {
        java {
            srcDirs = ['src/smokeTest/java']
        }
        resources {
            srcDirs = ['src/smokeTest/resources']
        }
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
    regressTest {
        java {
            srcDirs = ['src/regressTest/java']
        }
        resources {
            srcDirs = ['src/regressTest/resources']
        }
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    smokeTestImplementation.extendsFrom testImplementation
    smokeTestRuntimeOnly.extendsFrom testRuntimeOnly
    regressTestImplementation.extendsFrom testImplementation
    regressTestRuntimeOnly.extendsFrom testRuntimeOnly
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation "org.jmockit:jmockit:$jmockitVersion"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.testcontainers:postgresql:1.17.6'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.liquibase:liquibase-core'
}

test {
    jvmArgs "-javaagent:${classpath.find { it.name.contains("jmockit") }.absolutePath}"
}

//jacocoTestReport {
//    reports {
//        xml.enabled true
//    }
//}
//test.finalizedBy jacocoTestReport

checkstyle {
    toolVersion = '10.3.3'
    maxWarnings = 1000
}

//sonarqube {
//    properties {
//        property "sonar.projectKey", "java_sonar"
//        property "sonar.organization", "autum_moren"
//    }
//}

tasks.named('test') {
    useJUnitPlatform()
    doFirst {
        jvmArgs "-Dspring.profiles.active=test"
    }
}
//tasks.named('sonarqube').configure {dependsOn test}

tasks.named('integrationTest') {
    doFirst {
        jvmArgs "-Dspring.profiles.active=integ"
    }
    useJUnitPlatform()
}

task smokeTest(type: Test) {
    description = 'Runs smoke tests'
    group = 'verification'

    useJUnitPlatform()

    systemProperty "spring.profiles.active", "smokeTest"

    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
}

task regressTest(type: Test) {
    description = 'Runs regress tests'
    group = 'verification'

    useJUnitPlatform()

    systemProperty "spring.profiles.active", "regressTest"

    testClassesDirs = sourceSets.regressTest.output.classesDirs
    classpath = sourceSets.regressTest.runtimeClasspath
}