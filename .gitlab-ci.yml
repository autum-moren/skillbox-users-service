#services:
#  - docker:dind
#  - postgres:16.1
#image: docker:latest
#services:
#  - docker:dind

stages:
  - test
  - integrationTest
  - sonarqube-check
  - deploy

variables:
#  DOCKER_DRIVER: overlay
#  DOCKER_HOST: tcp://docker:2375/
#  DOCKER_DRIVER: overlay2
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

test:
  stage: test
  script:
    - gradle test

integrationTest:
  stage: integrationTest
  #  image: gradle:jdk11
  script:
    - gradle integTest

#build:
#  stage: build
#  script:
#    - gradle build --exclude-task test --exclude-task integTest

deploy:
  stage: deploy
  script:
    - gradle build --exclude-task test --exclude-task integTest
    - echo ${CI_ARTIFACTORY_PASSWORD} | docker login -u autum --password-stdin registry.gitlab.com/skillbox-microservices1/users-service
    # Загрузка Docker-образа в Container Registry
    - docker build -t registry.gitlab.com/skillbox-microservices1/users-service/users-service:1.0.0 .
    - docker push registry.gitlab.com/skillbox-microservices1/users-service/users-service:1.0.0

#publish:
#  stage: deploy
#  script:
#    - docker login registry.gitlab.com
#    - docker build -t registry.gitlab.com/skillbox-microservices1/users-service
#    - docker push registry.gitlab.com/skillbox-microservices1/users-service


#build-check:
#  stage: test
##  cache:
##    key: "${CI_JOB_NAME}"
##    path:
##      - .sonar/cache
#  script: gradle sonarqube -Dsonar.qualitygate.wait=true
#  rules:
#    - if: '$CI_BUILD_REF_NAME != "master" && $CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event"'